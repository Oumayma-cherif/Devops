{"ast":null,"code":"import { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./nom-du-service.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AppComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_25_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const p_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      const _r1 = i0.ɵɵreference(27);\n      return i0.ɵɵresetView(ctx_r4.open(_r1, p_r3));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \" \\u00A0 \");\n    i0.ɵɵelementStart(15, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_25_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const p_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deletePiste(p_r3.numPiste));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const p_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r3.numPiste);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r3.namePiste);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r3.color);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r3.length);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r3.slope);\n  }\n}\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction AppComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h4\", 10);\n    i0.ɵɵtext(2, \"Add new piste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_26_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const modal1_r7 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal1_r7.dismiss(\"Cross click\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 12)(5, \"form\")(6, \"div\", 13)(7, \"label\", 14);\n    i0.ɵɵtext(8, \"namePiste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 15)(10, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_26_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.piste.namePiste = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"label\", 17);\n    i0.ɵɵtext(13, \"color\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 15)(15, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_26_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.piste.color = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\", 13)(17, \"label\", 19);\n    i0.ɵɵtext(18, \"length\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 15)(20, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_26_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.piste.length = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 13)(22, \"label\", 21);\n    i0.ɵɵtext(23, \"slope\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 15)(25, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_ng_template_26_Template_input_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.piste.slope = $event);\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(26, \"div\", 23)(27, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_26_Template_button_click_27_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const modal1_r7 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      ctx_r14.addpiste(ctx_r14.piste);\n      return i0.ɵɵresetView(modal1_r7.close(\"Save click\"));\n    });\n    i0.ɵɵtext(28, \"Add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_template_26_Template_button_click_29_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const modal1_r7 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal1_r7.close(\"Save click\"));\n    });\n    i0.ɵɵtext(30, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.piste.namePiste)(\"ngModelOptions\", i0.ɵɵpureFunction0(8, _c0));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.piste.color)(\"ngModelOptions\", i0.ɵɵpureFunction0(9, _c0));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.piste.length)(\"ngModelOptions\", i0.ɵɵpureFunction0(10, _c0));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.piste.slope)(\"ngModelOptions\", i0.ɵɵpureFunction0(11, _c0));\n  }\n}\nexport class AppComponent {\n  constructor(pisteService, modalService) {\n    this.pisteService = pisteService;\n    this.modalService = modalService;\n    this.title = 'gestionSkiFront';\n    this.form = false;\n  }\n  ngOnInit() {\n    this.getAllpiste();\n    console.log(this.listpistes);\n    this.piste = {\n      numPiste: null,\n      namePiste: null,\n      color: null,\n      length: null,\n      slope: null\n    };\n  }\n  getAllpiste() {\n    return this.pisteService.getAllPiste().subscribe(res => {\n      this.listpistes = res;\n    });\n  }\n  addpiste(piste) {\n    this.pisteService.addPiste(piste).subscribe(response => {\n      console.log('Piste added successfully', response);\n      this.getAllpiste(); // Refresh the list of pistes after adding\n      this.form = false; // Hide the form/modal\n    }, error => {\n      console.error('Error adding piste:', error); // Log any error\n    });\n  }\n  // Add the deletePiste method\n  deletePiste(numPiste) {\n    if (confirm('Are you sure you want to delete this piste?')) {\n      this.pisteService.deletePiste(numPiste).subscribe(() => {\n        console.log('Piste deleted successfully!');\n        this.getAllpiste(); // Refresh the list after deletion\n      }, error => {\n        console.error('Error deleting piste', error);\n      });\n    }\n  }\n  open(content, action) {\n    if (action != null) this.piste = action; // For editing an existing piste\n    else this.piste = {\n      numPiste: null,\n      namePiste: null,\n      color: null,\n      length: null,\n      slope: null\n    }; // For adding a new piste\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {\n      this.closeResult = `Closed with: ${result}`;\n    }, reason => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  getDismissReason(reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  cancel() {\n    this.form = false;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.NomDuServiceService), i0.ɵɵdirectiveInject(i2.NgbModal));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 28,\n    vars: 1,\n    consts: [[1, \"row\"], [1, \"col-md-11\", 2, \"margin-left\", \"20px\"], [2, \"margin-top\", \"20px\"], [1, \"btn\", \"btn-round\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"mymodal1\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [1, \"mb-3\"], [\"for\", \"piste-namePiste\"], [1, \"input-group\"], [\"id\", \"piste-namePiste\", \"type\", \"text\", \"placeholder\", \"namePiste\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"piste-color\"], [\"id\", \"piste-color\", \"type\", \"text\", \"placeholder\", \"color\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"piste-length\"], [\"id\", \"piste-length\", \"type\", \"number\", \"placeholder\", \"length\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"piste-slope\"], [\"id\", \"piste\", \"type\", \"number\", \"placeholder\", \"slope\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r16 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n        i0.ɵɵtext(3, \"List piste \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n          i0.ɵɵrestoreView(_r16);\n          const _r1 = i0.ɵɵreference(27);\n          return i0.ɵɵresetView(ctx.open(_r1, null));\n        });\n        i0.ɵɵtext(6, \"Add new piste\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"br\");\n        i0.ɵɵelementStart(9, \"table\", 4)(10, \"thead\")(11, \"tr\")(12, \"th\");\n        i0.ɵɵtext(13, \"numPiste\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"namePiste\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"color\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"length\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"slope\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"tbody\");\n        i0.ɵɵtemplate(25, AppComponent_tr_25_Template, 17, 5, \"tr\", 5);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(26, AppComponent_ng_template_26_Template, 31, 12, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"ngForOf\", ctx.listpistes);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["ModalDismissReasons","i0","ctx_r14","AppComponent","constructor","pisteService","modalService","ngOnInit","getAllpiste","console","log","listpistes","piste","numPiste","namePiste","color","length","slope","getAllPiste","subscribe","res","addpiste","addPiste","response","form","error","deletePiste","confirm","open","content","action","ariaLabelledBy","result","then","closeResult","reason","getDismissReason","ESC","BACKDROP_CLICK","cancel","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/oumaymacherif/Downloads/CherifOumayma-5sim1-G3/Devops/Frontend/src/app/app.component.ts","/Users/oumaymacherif/Downloads/CherifOumayma-5sim1-G3/Devops/Frontend/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NomDuServiceService } from './nom-du-service.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { piste } from './Piste';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'gestionSkiFront';\n\n  form: boolean = false;\n  closeResult!: string;\n  listpistes: any;\n  piste!: any;\n\n  constructor(private pisteService: NomDuServiceService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.getAllpiste();\n    console.log(this.listpistes);\n    this.piste = {\n      numPiste: null,\n      namePiste: null,\n      color: null,\n      length: null,\n      slope: null\n    };\n  }\n\n  getAllpiste() {\n    return this.pisteService.getAllPiste().subscribe(res => {\n      this.listpistes = res;\n    });\n  }\n  addpiste(piste: any) {\n    this.pisteService.addPiste(piste).subscribe(\n      response => {\n        console.log('Piste added successfully', response);\n        this.getAllpiste();  // Refresh the list of pistes after adding\n        this.form = false;  // Hide the form/modal\n      },\n      error => {\n        console.error('Error adding piste:', error);  // Log any error\n      }\n    );\n  }\n  \n\n  // Add the deletePiste method\n  deletePiste(numPiste: number) {\n    if (confirm('Are you sure you want to delete this piste?')) {\n      this.pisteService.deletePiste(numPiste).subscribe(\n        () => {\n          console.log('Piste deleted successfully!');\n          this.getAllpiste();  // Refresh the list after deletion\n        },\n        (error) => {\n          console.error('Error deleting piste', error);\n        }\n      );\n    }\n  }\n\n  open(content: any, action: any) {\n    if (action != null)\n      this.piste = action;  // For editing an existing piste\n    else\n      this.piste = { numPiste: null, namePiste: null, color: null, length: null, slope: null };  // For adding a new piste\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  cancel() {\n    this.form = false;\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-11\" style=\"margin-left: 20px\">\n    <h3 style=\"margin-top: 20px\">List piste </h3>\n    <hr>\n    <button class=\"btn btn-round btn-sm btn-success\" (click)=\"open(mymodal1,null)\">Add new piste</button>\n    <br><br>\n    <table class=\"table table-hover\">\n      <thead>\n        <tr>\n          <th>numPiste</th>\n          <th>namePiste</th>\n          <th>color</th>\n          <th>length</th>\n          <th>slope</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let p of listpistes\">\n          <td>{{ p.numPiste }}</td>\n          <td>{{ p.namePiste }}</td>\n          <td>{{ p.color }}</td>\n          <td>{{ p.length }}</td>\n          <td>{{ p.slope }}</td>\n          <td>\n            <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"open(mymodal1, p)\">Edit</button>\n            &nbsp;\n            <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deletePiste(p.numPiste)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<ng-template #mymodal1 let-modal1>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add new piste</h4>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal1.dismiss('Cross click')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"mb-3\">\n        <label for=\"piste-namePiste\">namePiste</label>\n        <div class=\"input-group\">\n          <input id=\"piste-namePiste\" class=\"form-control\" type=\"text\" placeholder=\"namePiste\"\n                 [(ngModel)]=\"piste.namePiste\" [ngModelOptions]=\"{ standalone: true }\">\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"piste-color\">color</label>\n        <div class=\"input-group\">\n          <input id=\"piste-color\" class=\"form-control\" type=\"text\" placeholder=\"color\"\n                 [(ngModel)]=\"piste.color\" [ngModelOptions]=\"{ standalone: true }\">\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"piste-length\">length</label>\n        <div class=\"input-group\">\n          <input id=\"piste-length\" class=\"form-control\" type=\"number\" placeholder=\"length\"\n                 [(ngModel)]=\"piste.length\" [ngModelOptions]=\"{ standalone: true }\">\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"piste-slope\">slope</label>\n        <div class=\"input-group\">\n          <input id=\"piste\" class=\"form-control\" type=\"number\" placeholder=\"slope\"\n                 [(ngModel)]=\"piste.slope\" [ngModelOptions]=\"{ standalone: true }\">\n        </div>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"addpiste(piste); modal1.close('Save click')\">Add</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal1.close('Save click')\">Cancel</button>\n  </div>\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}