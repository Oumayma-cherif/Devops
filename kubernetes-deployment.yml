# MySQL Deployment in Kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
  template:
    metadata:
      labels:
        app: mysqldb
    spec:
      containers:
        - name: mysqldb
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: "stationSki"

---
# MySQL Service in Kubernetes
apiVersion: v1
kind: Service
metadata:
  name: mysqldb
spec:
  selector:
    app: mysqldb
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP

---
# Spring Boot Deployment in Kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-spring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-spring
  template:
    metadata:
      labels:
        app: app-spring
    spec:
      containers:
        - name: app-spring
          image: aliyounes/gestion-station-ski:1.4
          ports:
            - containerPort: 8089
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysqldb:3306/stationSki?createDatabaseIfNotExist=true"
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              value: ""
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: "update"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
              value: "org.hibernate.dialect.MySQL5InnoDBDialect"

---
# Spring Boot Service in Kubernetes
apiVersion: v1
kind: Service
metadata:
  name: app-spring-service
spec:
  selector:
    app: app-spring
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8089
      nodePort: 30001
  type: NodePort
